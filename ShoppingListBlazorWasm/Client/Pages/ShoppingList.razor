@page "/shoppinglist"
@using ShoppingListBlazorWasm.Shared
@inject HttpClient Http

<h3>Shopping List - @shoppingDate.ToString("dd-MMM-yyyy")</h3>

<table>
    <tr>
        <th>
            Item
        </th>
        <th>
            Price
        </th>
        <th>
            Qty
        </th>
        <th>
            Picked
        </th>
    </tr>
    @foreach (var shoppingListItem in shoppingListItems)
    {
    <tr style="@(shoppingListItem.ItemPicked ? "text-decoration: line-through" : "")">
        <td>
            @shoppingListItem.Name
        </td>
        <td>
            @shoppingListItem.Price
        </td>
        <td>
            @shoppingListItem.Quantity
        </td>
        <td>
            @if (shoppingListItem.ItemPicked)
            {
                <input type=checkbox @onchange="(() => PickItem(shoppingListItem.Name))" checked />
            }
            else
            {
                <input type=checkbox @onchange="(() => PickItem(shoppingListItem.Name))" />
            }
        </td>
    </tr>
    }
</table>

@code {
    private DateTime shoppingDate = new DateTime();

    protected List<ShoppingListItem> shoppingListItems;

    protected override async Task OnInitializedAsync()
    {
        shoppingListItems = await Http.GetFromJsonAsync<List<ShoppingListItem>>("ShoppingListItem");

        shoppingListItems.RemoveAll(x => x == null);

        if (shoppingListItems.Count > 0)
        {
            shoppingDate = shoppingListItems.First().ShoppingDate;
        }
    }

    private void PickItem(string shoppingItemName)
    {
        var shoppingListItemToUpdate = shoppingListItems.First(x => x.Name == shoppingItemName);

        if (shoppingListItemToUpdate != null)
        {
            shoppingListItemToUpdate.ItemPicked = !shoppingListItemToUpdate.ItemPicked;
        }
    }
}
